plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

def keysPropertiesFile = rootProject.file("keys.properties")
def keysProperties = new Properties()
keysProperties.load(new FileInputStream(keysPropertiesFile))

android {
    namespace 'com.example.smallworld'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.smallworld"
        minSdk 31
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "MAPBOX_ACCESS_TOKEN", keysProperties["MAPBOX_ACCESS_TOKEN"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"
    productFlavors {
        local {
            dimension "environment"
            applicationIdSuffix ".dev"
            // change value here to http://localhost:3000 if not running from an emulator
            buildConfigField("String", "API_BASE_URL", "\"http://10.0.2.2:3000\"")
        }
        dev {
            dimension "environment"
            buildConfigField("String", "API_BASE_URL", "\"https://smallworld.herokuapp.com\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // Core Dependencies
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.fragment:fragment-ktx:1.5.5"
    implementation 'androidx.appcompat:appcompat-resources:1.6.1'
    implementation 'androidx.core:core-ktx:1.9.0'

    // Structured Concurrency with coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Dependency Injection with Hilt
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.44.2"

    // UI With Compose
    // Using the Comnpose Bill of Materials: https://developer.android.com/jetpack/compose/bom
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation(composeBom)
    androidTestImplementation(composeBom)
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha06'
    implementation "androidx.compose.material:material-icons-extended:1.3.1"
    implementation "androidx.compose.material:material:1.3.1"
    implementation "androidx.compose.ui:ui-viewbinding"

    // Navigation with Navigation Component for Compose
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Networking with Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0" // retrofit for api wrapping
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0" // moshi for parsing/serialization

    // lifecycle management with jetpack
    def lifecycleVersion = '2.6.0-beta01'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleVersion"

    // Maps with Mapbox
    implementation 'com.mapbox.maps:android:10.11.0'

    // Location with Google Play Services Fused Location Provider
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // Logging with Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Memory Leak Monitoring with LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}